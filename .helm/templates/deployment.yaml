apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }} 
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.deployment.replicas }} 
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        test: "true"
      labels:
        app: {{ .Values.name }}
    spec:
      restartPolicy: Always
      imagePullSecrets:
        {{- with .Values.image.pullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | indent 6 }}
{{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag}} 
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ if .Values.deployment.additionalArguments }}
        args: {{ .Values.deployment.additionalArguments }}
{{- end }}
{{- if .Values.deployment.resources }}
        resources:
{{ toYaml .Values.deployment.resources | indent 10 }}
{{- end }}
        volumeMounts:
          - name: config-map-volume
            mountPath: /app_config/
        ports:
{{ if .Values.deployment.ports }}
{{- range .Values.deployment.ports }}
        - name: {{ .name }}
          containerPort: {{ .port }}
          protocol: {{ .protocol }}
{{- end }}
{{- end }}
#        livenessProbe:
#          httpGet:
#            #path: /healthz
#            port: 8092
#          initialDelaySeconds: 10
#          timeoutSeconds: 10
#        readinessProbe:
#          httpGet:
#            #path: /healthz
#            port: 8092
#          initialDelaySeconds: 10
#          timeoutSeconds: 10
      volumes:
      - configMap:
          name: {{ .Values.name }}-config-map
        name: config-map-volume
